Nonterminals useless in grammar

    statement_


Terminals unused in grammar

    ASSIGNOP


Rules useless in grammar

   76 statement_: statement ';'
   77           | fold_statement ';'
   78           | error ';'


Rules useless in parser due to conflicts

   67 if_statement: IF expression THEN statements elsif_list else_clause ENDIF


State 114 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 146 conflicts: 1 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'

    3 type: INTEGER
    4     | CHARACTER
    5     | REAL

    6 optional_variable: variable_list
    7                  | ε

    8 optional_parameters: parameters
    9                    | ε

   10 parameters: parameter
   11           | parameters ',' parameter

   12 parameter: IDENTIFIER ':' type

   13 variable_list: variable_list variable
   14              | variable

   15 variable: IDENTIFIER ':' type IS expression ';'
   16         | IDENTIFIER ':' LIST OF type IS list ';'
   17         | error ';'

   18 expressions: expressions ',' expression
   19            | expression

   20 expression: expression OROP and_expr
   21           | and_expr

   22 and_expr: and_expr ANDOP rel_expr
   23         | rel_expr

   24 rel_expr: rel_expr RELOP add_expr
   25         | rel_expr GTE add_expr
   26         | rel_expr LTE add_expr
   27         | rel_expr NEQ add_expr
   28         | add_expr

   29 add_expr: add_expr ADDOP mul_expr
   30         | add_expr SUBOP mul_expr
   31         | mul_expr

   32 mul_expr: mul_expr MULOP exp_expr
   33         | mul_expr DIVOP exp_expr
   34         | mul_expr MODOP exp_expr
   35         | exp_expr

   36 exp_expr: exp_expr EXPOP unary_expr
   37         | unary_expr

   38 unary_expr: NOTOP unary_expr
   39           | SUBOP unary_expr
   40           | primary

   41 primary: '(' expression ')'
   42        | INT_LITERAL
   43        | REAL_LITERAL
   44        | CHAR_LITERAL
   45        | IDENTIFIER '(' expression ')'
   46        | IDENTIFIER

   47 list: '(' expressions ')'

   48 body: BEGIN_ statements END ';'

   49 statement: expression
   50          | WHEN expression ',' expression ':' expression
   51          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   52          | if_statement
   53          | fold_statement

   54 statements: statements statement ';'
   55           | statement ';'

   56 if_statement: IF expression THEN statements elsif_list else_clause ENDIF

   57 fold_statement: FOLD direction operator fold_args ENDFOLD

   58 fold_args: list
   59          | expression

   60 direction: LEFT
   61          | RIGHT

   62 operator: ADDOP
   63         | SUBOP
   64         | MULOP
   65         | DIVOP
   66         | MODOP

   67 if_statement: IF expression THEN statements elsif_list else_clause ENDIF

   68 elsif_list: elsif_list ELSIF expression THEN statements
   69           | ELSIF expression THEN statements
   70           | ε

   71 else_clause: ELSE statements
   72            | ε

   73 cases: cases case
   74      | ε

   75 case: CASE INT_LITERAL ARROW statement ';'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 41 45 47
    ')' (41) 41 45 47
    ',' (44) 11 18 50
    ':' (58) 12 15 16 50
    ';' (59) 2 15 16 17 48 51 54 55 75
    error (256) 17
    IDENTIFIER (258) 2 12 15 16 45 46
    INT_LITERAL (259) 42 75
    REAL_LITERAL (260) 43
    CHAR_LITERAL (261) 44
    ADDOP (262) 29 62
    MULOP (263) 32 64
    SUBOP (264) 30 39 63
    DIVOP (265) 33 65
    MODOP (266) 34 66
    NOTOP (267) 38
    EXPOP (268) 36
    RELOP (269) 24
    GTE (270) 25
    LTE (271) 26
    NEQ (272) 27
    ASSIGNOP (273)
    OROP (274) 20
    ARROW (275) 51 75
    ANDOP (276) 22
    BEGIN_ (277) 48
    CASE (278) 75
    CHARACTER (279) 4
    ELSE (280) 71
    END (281) 48
    ENDSWITCH (282) 51
    FUNCTION (283) 2
    INTEGER (284) 3
    IS (285) 15 16 51
    LIST (286) 16
    OF (287) 16
    OTHERS (288) 51
    RETURNS (289) 2
    SWITCH (290) 51
    WHEN (291) 50
    IF (292) 56 67
    THEN (293) 56 67 68 69
    ELSIF (294) 68 69
    ENDIF (295) 56 67
    REAL (296) 5
    FOLD (297) 57
    ENDFOLD (298) 57
    LEFT (299) 60
    RIGHT (300) 61


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    function (52)
        on left: 1
        on right: 0
    function_header (53)
        on left: 2
        on right: 1
    type (54)
        on left: 3 4 5
        on right: 2 12 15 16
    optional_variable (55)
        on left: 6 7
        on right: 1
    optional_parameters (56)
        on left: 8 9
        on right: 2
    parameters (57)
        on left: 10 11
        on right: 8 11
    parameter (58)
        on left: 12
        on right: 10 11
    variable_list (59)
        on left: 13 14
        on right: 6 13
    variable (60)
        on left: 15 16 17
        on right: 13 14
    expressions (61)
        on left: 18 19
        on right: 18 47
    expression (62)
        on left: 20 21
        on right: 15 18 19 20 41 45 49 50 51 56 59 67 68 69
    and_expr (63)
        on left: 22 23
        on right: 20 21 22
    rel_expr (64)
        on left: 24 25 26 27 28
        on right: 22 23 24 25 26 27
    add_expr (65)
        on left: 29 30 31
        on right: 24 25 26 27 28 29 30
    mul_expr (66)
        on left: 32 33 34 35
        on right: 29 30 31 32 33 34
    exp_expr (67)
        on left: 36 37
        on right: 32 33 34 35 36
    unary_expr (68)
        on left: 38 39 40
        on right: 36 37 38 39
    primary (69)
        on left: 41 42 43 44 45 46
        on right: 40
    list (70)
        on left: 47
        on right: 16 58
    body (71)
        on left: 48
        on right: 1
    statement (72)
        on left: 49 50 51 52 53
        on right: 51 54 55 75
    statements (73)
        on left: 54 55
        on right: 48 54 56 67 68 69 71
    if_statement (74)
        on left: 56 67
        on right: 52
    fold_statement (75)
        on left: 57
        on right: 53
    fold_args (76)
        on left: 58 59
        on right: 57
    direction (77)
        on left: 60 61
        on right: 57
    operator (78)
        on left: 62 63 64 65 66
        on right: 57
    elsif_list (79)
        on left: 68 69 70
        on right: 56 67 68
    else_clause (80)
        on left: 71 72
        on right: 56 67
    cases (81)
        on left: 73 74
        on right: 51 73
    case (82)
        on left: 75
        on right: 73


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    error       shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    BEGIN_  reduce using rule 7 (optional_variable)

    optional_variable  go to state 8
    variable_list      go to state 9
    variable           go to state 10


State 4

    2 function_header: FUNCTION IDENTIFIER • optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 9 (optional_parameters)

    optional_parameters  go to state 12
    parameters           go to state 13
    parameter            go to state 14


State 5

    0 $accept: function $end •

    $default  accept


State 6

   17 variable: error • ';'

    ';'  shift, and go to state 15


State 7

   15 variable: IDENTIFIER • ':' type IS expression ';'
   16         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 16


State 8

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 17

    body  go to state 18


State 9

    6 optional_variable: variable_list •
   13 variable_list: variable_list • variable

    error       shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    BEGIN_  reduce using rule 6 (optional_variable)

    variable  go to state 19


State 10

   14 variable_list: variable •

    $default  reduce using rule 14 (variable_list)


State 11

   12 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 20


State 12

    2 function_header: FUNCTION IDENTIFIER optional_parameters • RETURNS type ';'

    RETURNS  shift, and go to state 21


State 13

    8 optional_parameters: parameters •
   11 parameters: parameters • ',' parameter

    ','  shift, and go to state 22

    $default  reduce using rule 8 (optional_parameters)


State 14

   10 parameters: parameter •

    $default  reduce using rule 10 (parameters)


State 15

   17 variable: error ';' •

    $default  reduce using rule 17 (variable)


State 16

   15 variable: IDENTIFIER ':' • type IS expression ';'
   16         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    LIST       shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 27


State 17

   48 body: BEGIN_ • statements END ';'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 47
    statements      go to state 48
    if_statement    go to state 49
    fold_statement  go to state 50


State 18

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 19

   13 variable_list: variable_list variable •

    $default  reduce using rule 13 (variable_list)


State 20

   12 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    REAL       shift, and go to state 26

    type  go to state 51


State 21

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    REAL       shift, and go to state 26

    type  go to state 52


State 22

   11 parameters: parameters ',' • parameter

    IDENTIFIER  shift, and go to state 11

    parameter  go to state 53


State 23

    4 type: CHARACTER •

    $default  reduce using rule 4 (type)


State 24

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 25

   16 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 54


State 26

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 27

   15 variable: IDENTIFIER ':' type • IS expression ';'

    IS  shift, and go to state 55


State 28

   45 primary: IDENTIFIER • '(' expression ')'
   46        | IDENTIFIER •

    '('  shift, and go to state 56

    $default  reduce using rule 46 (primary)


State 29

   42 primary: INT_LITERAL •

    $default  reduce using rule 42 (primary)


State 30

   43 primary: REAL_LITERAL •

    $default  reduce using rule 43 (primary)


State 31

   44 primary: CHAR_LITERAL •

    $default  reduce using rule 44 (primary)


State 32

   39 unary_expr: SUBOP • unary_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    unary_expr  go to state 57
    primary     go to state 46


State 33

   38 unary_expr: NOTOP • unary_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    unary_expr  go to state 58
    primary     go to state 46


State 34

   51 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 59
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 35

   50 statement: WHEN • expression ',' expression ':' expression

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 60
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 36

   56 if_statement: IF • expression THEN statements elsif_list else_clause ENDIF
   67             | IF • expression THEN statements elsif_list else_clause ENDIF

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 61
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 37

   57 fold_statement: FOLD • direction operator fold_args ENDFOLD

    LEFT   shift, and go to state 62
    RIGHT  shift, and go to state 63

    direction  go to state 64


State 38

   41 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 65
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 39

   20 expression: expression • OROP and_expr
   49 statement: expression •

    OROP  shift, and go to state 66

    $default  reduce using rule 49 (statement)


State 40

   21 expression: and_expr •
   22 and_expr: and_expr • ANDOP rel_expr

    ANDOP  shift, and go to state 67

    $default  reduce using rule 21 (expression)


State 41

   23 and_expr: rel_expr •
   24 rel_expr: rel_expr • RELOP add_expr
   25         | rel_expr • GTE add_expr
   26         | rel_expr • LTE add_expr
   27         | rel_expr • NEQ add_expr

    RELOP  shift, and go to state 68
    GTE    shift, and go to state 69
    LTE    shift, and go to state 70
    NEQ    shift, and go to state 71

    $default  reduce using rule 23 (and_expr)


State 42

   28 rel_expr: add_expr •
   29 add_expr: add_expr • ADDOP mul_expr
   30         | add_expr • SUBOP mul_expr

    ADDOP  shift, and go to state 72
    SUBOP  shift, and go to state 73

    $default  reduce using rule 28 (rel_expr)


State 43

   31 add_expr: mul_expr •
   32 mul_expr: mul_expr • MULOP exp_expr
   33         | mul_expr • DIVOP exp_expr
   34         | mul_expr • MODOP exp_expr

    MULOP  shift, and go to state 74
    DIVOP  shift, and go to state 75
    MODOP  shift, and go to state 76

    $default  reduce using rule 31 (add_expr)


State 44

   35 mul_expr: exp_expr •
   36 exp_expr: exp_expr • EXPOP unary_expr

    EXPOP  shift, and go to state 77

    $default  reduce using rule 35 (mul_expr)


State 45

   37 exp_expr: unary_expr •

    $default  reduce using rule 37 (exp_expr)


State 46

   40 unary_expr: primary •

    $default  reduce using rule 40 (unary_expr)


State 47

   55 statements: statement • ';'

    ';'  shift, and go to state 78


State 48

   48 body: BEGIN_ statements • END ';'
   54 statements: statements • statement ';'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    END           shift, and go to state 79
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 80
    if_statement    go to state 49
    fold_statement  go to state 50


State 49

   52 statement: if_statement •

    $default  reduce using rule 52 (statement)


State 50

   53 statement: fold_statement •

    $default  reduce using rule 53 (statement)


State 51

   12 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 12 (parameter)


State 52

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type • ';'

    ';'  shift, and go to state 81


State 53

   11 parameters: parameters ',' parameter •

    $default  reduce using rule 11 (parameters)


State 54

   16 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 23
    INTEGER    shift, and go to state 24
    REAL       shift, and go to state 26

    type  go to state 82


State 55

   15 variable: IDENTIFIER ':' type IS • expression ';'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 83
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 56

   45 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 84
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 57

   39 unary_expr: SUBOP unary_expr •

    $default  reduce using rule 39 (unary_expr)


State 58

   38 unary_expr: NOTOP unary_expr •

    $default  reduce using rule 38 (unary_expr)


State 59

   20 expression: expression • OROP and_expr
   51 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH

    OROP  shift, and go to state 66
    IS    shift, and go to state 85


State 60

   20 expression: expression • OROP and_expr
   50 statement: WHEN expression • ',' expression ':' expression

    OROP  shift, and go to state 66
    ','   shift, and go to state 86


State 61

   20 expression: expression • OROP and_expr
   56 if_statement: IF expression • THEN statements elsif_list else_clause ENDIF
   67             | IF expression • THEN statements elsif_list else_clause ENDIF

    OROP  shift, and go to state 66
    THEN  shift, and go to state 87


State 62

   60 direction: LEFT •

    $default  reduce using rule 60 (direction)


State 63

   61 direction: RIGHT •

    $default  reduce using rule 61 (direction)


State 64

   57 fold_statement: FOLD direction • operator fold_args ENDFOLD

    ADDOP  shift, and go to state 88
    MULOP  shift, and go to state 89
    SUBOP  shift, and go to state 90
    DIVOP  shift, and go to state 91
    MODOP  shift, and go to state 92

    operator  go to state 93


State 65

   20 expression: expression • OROP and_expr
   41 primary: '(' expression • ')'

    OROP  shift, and go to state 66
    ')'   shift, and go to state 94


State 66

   20 expression: expression OROP • and_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    and_expr    go to state 95
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 67

   22 and_expr: and_expr ANDOP • rel_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    rel_expr    go to state 96
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 68

   24 rel_expr: rel_expr RELOP • add_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    add_expr    go to state 97
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 69

   25 rel_expr: rel_expr GTE • add_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    add_expr    go to state 98
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 70

   26 rel_expr: rel_expr LTE • add_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    add_expr    go to state 99
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 71

   27 rel_expr: rel_expr NEQ • add_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    add_expr    go to state 100
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 72

   29 add_expr: add_expr ADDOP • mul_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    mul_expr    go to state 101
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 73

   30 add_expr: add_expr SUBOP • mul_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    mul_expr    go to state 102
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 74

   32 mul_expr: mul_expr MULOP • exp_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    exp_expr    go to state 103
    unary_expr  go to state 45
    primary     go to state 46


State 75

   33 mul_expr: mul_expr DIVOP • exp_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    exp_expr    go to state 104
    unary_expr  go to state 45
    primary     go to state 46


State 76

   34 mul_expr: mul_expr MODOP • exp_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    exp_expr    go to state 105
    unary_expr  go to state 45
    primary     go to state 46


State 77

   36 exp_expr: exp_expr EXPOP • unary_expr

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    unary_expr  go to state 106
    primary     go to state 46


State 78

   55 statements: statement ';' •

    $default  reduce using rule 55 (statements)


State 79

   48 body: BEGIN_ statements END • ';'

    ';'  shift, and go to state 107


State 80

   54 statements: statements statement • ';'

    ';'  shift, and go to state 108


State 81

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 82

   16 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 109


State 83

   15 variable: IDENTIFIER ':' type IS expression • ';'
   20 expression: expression • OROP and_expr

    OROP  shift, and go to state 66
    ';'   shift, and go to state 110


State 84

   20 expression: expression • OROP and_expr
   45 primary: IDENTIFIER '(' expression • ')'

    OROP  shift, and go to state 66
    ')'   shift, and go to state 111


State 85

   51 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 74 (cases)

    cases  go to state 112


State 86

   50 statement: WHEN expression ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 113
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 87

   56 if_statement: IF expression THEN • statements elsif_list else_clause ENDIF
   67             | IF expression THEN • statements elsif_list else_clause ENDIF

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 47
    statements      go to state 114
    if_statement    go to state 49
    fold_statement  go to state 50


State 88

   62 operator: ADDOP •

    $default  reduce using rule 62 (operator)


State 89

   64 operator: MULOP •

    $default  reduce using rule 64 (operator)


State 90

   63 operator: SUBOP •

    $default  reduce using rule 63 (operator)


State 91

   65 operator: DIVOP •

    $default  reduce using rule 65 (operator)


State 92

   66 operator: MODOP •

    $default  reduce using rule 66 (operator)


State 93

   57 fold_statement: FOLD direction operator • fold_args ENDFOLD

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 115

    expression  go to state 116
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46
    list        go to state 117
    fold_args   go to state 118


State 94

   41 primary: '(' expression ')' •

    $default  reduce using rule 41 (primary)


State 95

   20 expression: expression OROP and_expr •
   22 and_expr: and_expr • ANDOP rel_expr

    ANDOP  shift, and go to state 67

    $default  reduce using rule 20 (expression)


State 96

   22 and_expr: and_expr ANDOP rel_expr •
   24 rel_expr: rel_expr • RELOP add_expr
   25         | rel_expr • GTE add_expr
   26         | rel_expr • LTE add_expr
   27         | rel_expr • NEQ add_expr

    RELOP  shift, and go to state 68
    GTE    shift, and go to state 69
    LTE    shift, and go to state 70
    NEQ    shift, and go to state 71

    $default  reduce using rule 22 (and_expr)


State 97

   24 rel_expr: rel_expr RELOP add_expr •
   29 add_expr: add_expr • ADDOP mul_expr
   30         | add_expr • SUBOP mul_expr

    ADDOP  shift, and go to state 72
    SUBOP  shift, and go to state 73

    $default  reduce using rule 24 (rel_expr)


State 98

   25 rel_expr: rel_expr GTE add_expr •
   29 add_expr: add_expr • ADDOP mul_expr
   30         | add_expr • SUBOP mul_expr

    ADDOP  shift, and go to state 72
    SUBOP  shift, and go to state 73

    $default  reduce using rule 25 (rel_expr)


State 99

   26 rel_expr: rel_expr LTE add_expr •
   29 add_expr: add_expr • ADDOP mul_expr
   30         | add_expr • SUBOP mul_expr

    ADDOP  shift, and go to state 72
    SUBOP  shift, and go to state 73

    $default  reduce using rule 26 (rel_expr)


State 100

   27 rel_expr: rel_expr NEQ add_expr •
   29 add_expr: add_expr • ADDOP mul_expr
   30         | add_expr • SUBOP mul_expr

    ADDOP  shift, and go to state 72
    SUBOP  shift, and go to state 73

    $default  reduce using rule 27 (rel_expr)


State 101

   29 add_expr: add_expr ADDOP mul_expr •
   32 mul_expr: mul_expr • MULOP exp_expr
   33         | mul_expr • DIVOP exp_expr
   34         | mul_expr • MODOP exp_expr

    MULOP  shift, and go to state 74
    DIVOP  shift, and go to state 75
    MODOP  shift, and go to state 76

    $default  reduce using rule 29 (add_expr)


State 102

   30 add_expr: add_expr SUBOP mul_expr •
   32 mul_expr: mul_expr • MULOP exp_expr
   33         | mul_expr • DIVOP exp_expr
   34         | mul_expr • MODOP exp_expr

    MULOP  shift, and go to state 74
    DIVOP  shift, and go to state 75
    MODOP  shift, and go to state 76

    $default  reduce using rule 30 (add_expr)


State 103

   32 mul_expr: mul_expr MULOP exp_expr •
   36 exp_expr: exp_expr • EXPOP unary_expr

    EXPOP  shift, and go to state 77

    $default  reduce using rule 32 (mul_expr)


State 104

   33 mul_expr: mul_expr DIVOP exp_expr •
   36 exp_expr: exp_expr • EXPOP unary_expr

    EXPOP  shift, and go to state 77

    $default  reduce using rule 33 (mul_expr)


State 105

   34 mul_expr: mul_expr MODOP exp_expr •
   36 exp_expr: exp_expr • EXPOP unary_expr

    EXPOP  shift, and go to state 77

    $default  reduce using rule 34 (mul_expr)


State 106

   36 exp_expr: exp_expr EXPOP unary_expr •

    $default  reduce using rule 36 (exp_expr)


State 107

   48 body: BEGIN_ statements END ';' •

    $default  reduce using rule 48 (body)


State 108

   54 statements: statements statement ';' •

    $default  reduce using rule 54 (statements)


State 109

   16 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 119

    list  go to state 120


State 110

   15 variable: IDENTIFIER ':' type IS expression ';' •

    $default  reduce using rule 15 (variable)


State 111

   45 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 45 (primary)


State 112

   51 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   73 cases: cases • case

    CASE    shift, and go to state 121
    OTHERS  shift, and go to state 122

    case  go to state 123


State 113

   20 expression: expression • OROP and_expr
   50 statement: WHEN expression ',' expression • ':' expression

    OROP  shift, and go to state 66
    ':'   shift, and go to state 124


State 114

   54 statements: statements • statement ';'
   56 if_statement: IF expression THEN statements • elsif_list else_clause ENDIF
   67             | IF expression THEN statements • elsif_list else_clause ENDIF

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    ELSIF         shift, and go to state 125
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    ELSIF     [reduce using rule 70 (elsif_list)]
    $default  reduce using rule 70 (elsif_list)

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 80
    if_statement    go to state 49
    fold_statement  go to state 50
    elsif_list      go to state 126


State 115

   41 primary: '(' • expression ')'
   47 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expressions  go to state 127
    expression   go to state 128
    and_expr     go to state 40
    rel_expr     go to state 41
    add_expr     go to state 42
    mul_expr     go to state 43
    exp_expr     go to state 44
    unary_expr   go to state 45
    primary      go to state 46


State 116

   20 expression: expression • OROP and_expr
   59 fold_args: expression •

    OROP  shift, and go to state 66

    $default  reduce using rule 59 (fold_args)


State 117

   58 fold_args: list •

    $default  reduce using rule 58 (fold_args)


State 118

   57 fold_statement: FOLD direction operator fold_args • ENDFOLD

    ENDFOLD  shift, and go to state 129


State 119

   47 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expressions  go to state 127
    expression   go to state 130
    and_expr     go to state 40
    rel_expr     go to state 41
    add_expr     go to state 42
    mul_expr     go to state 43
    exp_expr     go to state 44
    unary_expr   go to state 45
    primary      go to state 46


State 120

   16 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 131


State 121

   75 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 132


State 122

   51 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 133


State 123

   73 cases: cases case •

    $default  reduce using rule 73 (cases)


State 124

   50 statement: WHEN expression ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 134
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 125

   69 elsif_list: ELSIF • expression THEN statements

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 135
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 126

   56 if_statement: IF expression THEN statements elsif_list • else_clause ENDIF
   67             | IF expression THEN statements elsif_list • else_clause ENDIF
   68 elsif_list: elsif_list • ELSIF expression THEN statements

    ELSE   shift, and go to state 136
    ELSIF  shift, and go to state 137

    $default  reduce using rule 72 (else_clause)

    else_clause  go to state 138


State 127

   18 expressions: expressions • ',' expression
   47 list: '(' expressions • ')'

    ','  shift, and go to state 139
    ')'  shift, and go to state 140


State 128

   19 expressions: expression •
   20 expression: expression • OROP and_expr
   41 primary: '(' expression • ')'

    OROP  shift, and go to state 66
    ')'   shift, and go to state 94

    ')'       [reduce using rule 19 (expressions)]
    $default  reduce using rule 19 (expressions)


State 129

   57 fold_statement: FOLD direction operator fold_args ENDFOLD •

    $default  reduce using rule 57 (fold_statement)


State 130

   19 expressions: expression •
   20 expression: expression • OROP and_expr

    OROP  shift, and go to state 66

    $default  reduce using rule 19 (expressions)


State 131

   16 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 16 (variable)


State 132

   75 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 141


State 133

   51 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 142
    if_statement    go to state 49
    fold_statement  go to state 50


State 134

   20 expression: expression • OROP and_expr
   50 statement: WHEN expression ',' expression ':' expression •

    OROP  shift, and go to state 66

    $default  reduce using rule 50 (statement)


State 135

   20 expression: expression • OROP and_expr
   69 elsif_list: ELSIF expression • THEN statements

    OROP  shift, and go to state 66
    THEN  shift, and go to state 143


State 136

   71 else_clause: ELSE • statements

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 47
    statements      go to state 144
    if_statement    go to state 49
    fold_statement  go to state 50


State 137

   68 elsif_list: elsif_list ELSIF • expression THEN statements

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 145
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 138

   56 if_statement: IF expression THEN statements elsif_list else_clause • ENDIF
   67             | IF expression THEN statements elsif_list else_clause • ENDIF

    ENDIF  shift, and go to state 146


State 139

   18 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 38

    expression  go to state 147
    and_expr    go to state 40
    rel_expr    go to state 41
    add_expr    go to state 42
    mul_expr    go to state 43
    exp_expr    go to state 44
    unary_expr  go to state 45
    primary     go to state 46


State 140

   47 list: '(' expressions ')' •

    $default  reduce using rule 47 (list)


State 141

   75 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 148
    if_statement    go to state 49
    fold_statement  go to state 50


State 142

   51 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 149


State 143

   69 elsif_list: ELSIF expression THEN • statements

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 47
    statements      go to state 150
    if_statement    go to state 49
    fold_statement  go to state 50


State 144

   54 statements: statements • statement ';'
   71 else_clause: ELSE statements •

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    $default  reduce using rule 71 (else_clause)

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 80
    if_statement    go to state 49
    fold_statement  go to state 50


State 145

   20 expression: expression • OROP and_expr
   68 elsif_list: elsif_list ELSIF expression • THEN statements

    OROP  shift, and go to state 66
    THEN  shift, and go to state 151


State 146

   56 if_statement: IF expression THEN statements elsif_list else_clause ENDIF •
   67             | IF expression THEN statements elsif_list else_clause ENDIF •

    ';'       reduce using rule 56 (if_statement)
    ';'       [reduce using rule 67 (if_statement)]
    $default  reduce using rule 56 (if_statement)


State 147

   18 expressions: expressions ',' expression •
   20 expression: expression • OROP and_expr

    OROP  shift, and go to state 66

    $default  reduce using rule 18 (expressions)


State 148

   75 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 152


State 149

   51 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 153


State 150

   54 statements: statements • statement ';'
   69 elsif_list: ELSIF expression THEN statements •

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    $default  reduce using rule 69 (elsif_list)

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 80
    if_statement    go to state 49
    fold_statement  go to state 50


State 151

   68 elsif_list: elsif_list ELSIF expression THEN • statements

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 47
    statements      go to state 154
    if_statement    go to state 49
    fold_statement  go to state 50


State 152

   75 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 75 (case)


State 153

   51 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 51 (statement)


State 154

   54 statements: statements • statement ';'
   68 elsif_list: elsif_list ELSIF expression THEN statements •

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    SUBOP         shift, and go to state 32
    NOTOP         shift, and go to state 33
    SWITCH        shift, and go to state 34
    WHEN          shift, and go to state 35
    IF            shift, and go to state 36
    FOLD          shift, and go to state 37
    '('           shift, and go to state 38

    $default  reduce using rule 68 (elsif_list)

    expression      go to state 39
    and_expr        go to state 40
    rel_expr        go to state 41
    add_expr        go to state 42
    mul_expr        go to state 43
    exp_expr        go to state 44
    unary_expr      go to state 45
    primary         go to state 46
    statement       go to state 80
    if_statement    go to state 49
    fold_statement  go to state 50
